/*
 * Gradle build file for jAADD.
 * It uses a pre-compiled version of z3 under z3lib, not the maven that is outdated.
 *
 * - gradle build builds it.
 * - gradle clean cleans up.
 * - The (fat) jar file is in ./build/libs.
 *
 * User Manual available at https://docs.gradle.org/5.5/userguide/java_library_plugin.html
 */

plugins {
    id 'java-library' // support for libraries: jaadd.jar
    id 'idea'
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'org.jetbrains.dokka' version '0.10.0'
}


repositories {
    jcenter()
    mavenCentral()
}

dokka {
    outputFormat = 'html' 
    outputDirectory = "$buildDir/dokka"
}


dependencies {

    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6'

    // compile fileTree(include: ['*.jar'], dir: 'libs')
    compile group: 'org.json', name: 'json', version: '20180813'
    compile 'com.google.code.gson:gson:2.2.4'
    compile group: 'org.knowm.xchart', name: 'xchart', version: '3.6.1'


    test.useJUnitPlatform()
    testImplementation "org.junit.jupiter:junit-jupiter-params:5.5.1"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.5.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}


//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest { attributes 'Implementation-Title': 'jAADD library',  'Implementation-Version': '2.0'} 
	baseName = project.name + '-all'
    	from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    	with jar
}


dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
    
    // In case of a Gradle multiproject build, you can include subprojects here to get merged documentation
    // Note however, that you have to have the Kotlin plugin available in the root project and in the subprojects
    subProjects = ["subproject1", "subproject2"]
        
    // Used for disabling auto extraction of sources and platforms in both multi-platform and single-platform modes
    // When set to true, subProject and kotlinTasks are also omitted
    disableAutoconfiguration = false 

    // Use default or set to custom path to cache directory
    // to enable package-list caching
    // When this is set to default, caches are stored in $USER_HOME/.cache/dokka
    cacheRoot = 'default' 
    
}
